group 'ru.drankov'
version '1.0-RELEASE'

apply plugin: 'java'
apply plugin: 'application'



mainClassName = 'ru.drankov.server.Server'

////////////////////////////////////////////////////////////////////
////////////// CONSOLE RUN /////////////////////////////////////////
////////////////////////////////////////////////////////////////////

task consoleServer(dependsOn: 'run') {

}

task guiServer(dependsOn: 'run') {

}

task guiClient(dependsOn: 'run') {

}


gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.hasTask(consoleServer)) {
        mainClassName = 'ru.drankov.server.Server'
    } else if (taskGraph.hasTask(guiServer)) {
        mainClassName = 'ru.drankov.server.ServerGUI'
    } else if (taskGraph.hasTask(guiClient)) {
        mainClassName = 'ru.drankov.client.ClientGUI'
    }
}

////////////////////////////////////////////////////////////////////
//////////////////   JARS   ////////////////////////////////////////
////////////////////////////////////////////////////////////////////

task clientGUIJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Gradle Jar File Example',
                'Implementation-Version': version,
                'Main-Class': 'ru.drankov.client.ClientGUI'
    }
    baseName = project.name + '-CLIENT-GUI'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task serverGUIJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Gradle Jar File Example',
                'Implementation-Version': version,
                'Main-Class': 'ru.drankov.server.ServerGUI'
    }
    baseName = project.name + '-Server-GUI'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task consoleServerJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Gradle Jar File Example',
                'Implementation-Version': version,
                'Main-Class': 'ru.drankov.server.ServerGUI'
    }
    baseName = project.name + '-Conosle_Server'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}



sourceCompatibility = 1.8

task wrapper(type: Wrapper) {
    gradleVersion = '3.5'
}